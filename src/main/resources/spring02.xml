<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Object injection / BeanPostProcessor class display -->
    <bean id="greece"
          class="com.example.jbrainspringdemo.Countries.Greece" >
        <property name="argos" ref="argos"/>
        <property name="athens" ref="athens"/>
    </bean>
    <bean id="argos"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="Argos"/>
    </bean>
    <bean id="athens"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="Athens"/>
    </bean>
    <!-- Uncomment the following bean to display BeanPostProcessor class-->
    <!--<bean class="com.example.jbrainspringdemo.DisplayBeanPostProcessor"/>-->

    <!-- Object injection / BeanFactoryPostProcessor class display / Initialising values of Beans through
    city.config file -->
    <bean id="sweden"
          class="com.example.jbrainspringdemo.Countries.Sweden">
        <property name="malmo" ref="malmo"/>
        <property name="lund" ref="lund"/>
        <property name="kalmar" ref="kalmar"/>
    </bean>
    <bean id="malmo"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${malmo.name}"/>
    </bean>
    <bean id="lund"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${lund.name}"/>
    </bean>
    <bean id="kalmar"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="Kalmar"/>
    </bean>
    <!-- BeanFactoryPostProcessor initialisation -->
    <bean class="com.example.jbrainspringdemo.DisplayBeanFactoryPostProcessor"/>


    <!-- Loading values for the cityconfig.properties file -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations" value="cityconfig.properties"/>
    </bean>


    <!-- Using Annotations / Required annotation (deprecated) -->
    <bean id="egypt"
          class="com.example.jbrainspringdemo.Countries.Egypt">
        <property name="cities">
            <list>
                <ref bean="cairo"/>
                <ref bean="alexandria"/>
                <ref bean="thebes"/>
            </list>
        </property>
    </bean>
    <bean id="cairo"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${cairo.name}"/>
    </bean>
    <bean id="alexandria"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${alexandria.name}"/>
    </bean>
    <bean id="thebes"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${thebes.name}"/>
    </bean>
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>

    <!-- Using Autowire annotation with a list of objects -->
    <bean id="italy"
          class="com.example.jbrainspringdemo.Countries.Italy">
    </bean>
    <bean id="rome"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${rome.name}"/>
    </bean>
    <bean id="venice"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${venice.name}"/>
    </bean>
    <bean id="palermo"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${palermo.name}"/>
    </bean>

    <!-- This is used with @Autowire in order to print beans by type (in our case City objects) -->
    <!-- It can be used with a list and will find all the object of the same type or with single object,
         if there are multiple single objects of the same types it will choose the one with the same name
         as the name in the class (for example the Canada class with attribute toronto will choose bean with id toronto) -->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
    <context:annotation-config/>   <!-- This does the same as above without the need of calling every annotation -->

    <!-- Using Autowire annotation with a single object City -->
    <bean id="canada"
          class="com.example.jbrainspringdemo.Countries.Canada">
    </bean>

    <bean id="toronto"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${toronto.name}"/>
    </bean>

    <!-- Using Autowire and Qualifier annotation with a single object City -->
    <bean id="u_s_a"
          class="com.example.jbrainspringdemo.Countries.USA">
    </bean>
    <bean id="city1"
          class="com.example.jbrainspringdemo.Countries.City">
        <qualifier value="city1"/>
        <property name="name" value="${usa.newYork}"/>
    </bean>
    <bean id="city2"
          class="com.example.jbrainspringdemo.Countries.City">
        <property name="name" value="${usa.california}"/>
        <qualifier value="city2"/>
    </bean>

</beans>